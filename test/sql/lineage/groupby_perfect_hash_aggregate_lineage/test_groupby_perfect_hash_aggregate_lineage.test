# name: test/sql/lineage/groupby_lineage/test_groupby_perfect_hash_aggregate_lineage.test
# description: Test Group By linage -- hash aggregate
# group: [groupby_perfect_hash_aggregate_lineage]
#
#┌───────────────────────────┐
#│   PERFECT_HASH_GROUP_BY   │
#│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │
#│             #0            │
#│          avg(#1)          │
#└─────────────┬─────────────┘
#┌─────────────┴─────────────┐
#│         PROJECTION        │
#│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │
#│             i             │
#│             j             │
#└─────────────┬─────────────┘
#┌─────────────┴─────────────┐
#│          SEQ_SCAN         │
#│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │
#│             t1            │
#│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │
#│             i             │
#│             j             │
#└───────────────────────────┘

statement ok
PRAGMA trace_lineage = "OFF";

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER);

statement ok
INSERT INTO t1 VALUES (1, 2),  (5, 2), (1, 4), (2, 1), (1, 3),(2, 2), (4, 1), (5, 1)


statement ok
PRAGMA trace_lineage = "ON";

# standalone limit
query II
select t1.i, avg(t1.j) from t1 GROUP BY t1.i
----
1	3.000000
2	1.500000
4	1.000000
5	1.500000

statement ok
PRAGMA trace_lineage = "OFF";

query II
select sink.chunk_id, sink.index as input, out.chunk_id, out.index as output from PERFECT_HASH_GROUP_BY_0_OUT as out, PERFECT_HASH_GROUP_BY_0_SINK as sink where out.chunk_id=sink.chunk_id and out.value=sink.value;
----
0	0	0	0
0	1	0	3
0	2	0	0
0	3	0	1
0	4	0	0
0	5	0	1
0	6	0	2
0	7	0	3

query IIII
select rowid, chunk_id, index, value from PERFECT_HASH_GROUP_BY_0_OUT;
----
0	0	0	1
1	0	1	2
2	0	2	4
3	0	3	5


query IIII
select rowid, chunk_id, index, value from PERFECT_HASH_GROUP_BY_0_SINK;
----
0	0	0	1
1	0	1	5
2	0	2	1
3	0	3	2
4	0	4	1
5	0	5	2
6	0	6	4
7	0	7	5


query IIII
select rowid, chunk_id, range_start, range_end from SEQ_SCAN_0_range;
----
0	0	0	8